options:
  parameters:
    author: aruncs
    catch_exceptions: 'True'
    category: '[GRC Hier Blocks]'
    cmake_opt: ''
    comment: ''
    copyright: ''
    description: ''
    gen_cmake: 'On'
    gen_linking: dynamic
    generate_options: qt_gui
    hier_block_src_path: '.:'
    id: qpsk_with_pluto_tx
    max_nouts: '0'
    output_language: python
    placement: (0,0)
    qt_qss_theme: ''
    realtime_scheduling: ''
    run: 'True'
    run_command: '{python} -u {filename}'
    run_options: prompt
    sizing_mode: fixed
    thread_safe_setters: ''
    title: QPSK Pluto Receiver
    window_size: (1000,1000)
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [8, 8]
    rotation: 0
    state: enabled

blocks:
- name: access_key
  id: variable
  parameters:
    comment: ''
    value: '"1110000101011010111010001001001111100001010110101110100010010011"'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [512, 8.0]
    rotation: 0
    state: enabled
- name: excess_bw
  id: variable
  parameters:
    comment: ''
    value: '0.35'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [96, 128.0]
    rotation: 0
    state: enabled
- name: hdr_format
  id: variable
  parameters:
    comment: header_format_default
    value: digital.header_format_default(access_key, 0)
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [688, 16.0]
    rotation: 0
    state: enabled
- name: low_pass_filter_taps
  id: variable_low_pass_filter_taps
  parameters:
    beta: '6.76'
    comment: ''
    cutoff_freq: '20000'
    gain: '1.0'
    samp_rate: samp_rate
    value: ''
    width: '2000'
    win: window.WIN_HAMMING
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [992, 16.0]
    rotation: 0
    state: true
- name: nfilts
  id: variable
  parameters:
    comment: ''
    value: '32'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [16, 128.0]
    rotation: 0
    state: enabled
- name: phase_bw
  id: variable
  parameters:
    comment: ''
    value: '0.0628'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1000, 208.0]
    rotation: 0
    state: true
- name: qpsk
  id: variable_constellation_rect
  parameters:
    comment: ''
    const_points: '[0.707+0.707j, -0.707+0.707j, -0.707-0.707j, 0.707-0.707j]'
    imag_sect: '2'
    precision: '8'
    real_sect: '2'
    rot_sym: '4'
    soft_dec_lut: None
    sym_map: '[0, 1, 2, 3]'
    w_imag_sect: '1'
    w_real_sect: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [392, 108.0]
    rotation: 0
    state: enabled
- name: rrc_taps
  id: variable
  parameters:
    comment: ''
    value: firdes.root_raised_cosine(nfilts, nfilts, 1.0/float(sps), 0.35, 11*sps*nfilts)
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [16, 200.0]
    rotation: 0
    state: enabled
- name: rs_ratio
  id: variable
  parameters:
    comment: ''
    value: '1.040'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [288, 88.0]
    rotation: 0
    state: true
- name: samp_rate
  id: variable
  parameters:
    comment: ''
    value: '48000'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [192, 16.0]
    rotation: 0
    state: enabled
- name: sps
  id: variable
  parameters:
    comment: ''
    value: '4'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [288, 16.0]
    rotation: 0
    state: enabled
- name: taps
  id: variable
  parameters:
    comment: ''
    value: firdes.low_pass(1.0, usrp_rate, samp_rate/2*0.8, 1000, window.WIN_HAMMING)
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1456, 56.0]
    rotation: 0
    state: enabled
- name: usrp_rate
  id: variable
  parameters:
    comment: ''
    value: '768000'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [192, 80.0]
    rotation: 0
    state: true
- name: variable_adaptive_algorithm_0
  id: variable_adaptive_algorithm
  parameters:
    comment: ''
    cons: qpsk
    delta: '10.0'
    ffactor: '0.99'
    modulus: '4'
    step_size: '.0001'
    type: cma
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [800, 128.0]
    rotation: 0
    state: true
- name: InFile
  id: parameter
  parameters:
    alias: ''
    comment: ''
    hide: none
    label: message.txt
    short_id: ''
    type: str
    value: default
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [888, 16.0]
    rotation: 0
    state: true
- name: blocks_pack_k_bits_bb_0
  id: blocks_pack_k_bits_bb
  parameters:
    affinity: ''
    alias: ''
    comment: check if need , or bypass
    k: '2'
    maxoutbuf: '0'
    minoutbuf: '0'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1280, 248.0]
    rotation: 0
    state: bypassed
- name: blocks_tagged_stream_mux_0
  id: blocks_tagged_stream_mux
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    lengthtagname: packet_len
    maxoutbuf: '0'
    minoutbuf: '0'
    ninputs: '2'
    tag_preserve_head_pos: '0'
    type: byte
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1072, 312.0]
    rotation: 0
    state: enabled
- name: blocks_throttle2_0
  id: blocks_throttle2
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    ignoretag: 'True'
    limit: auto
    maximum: '0.1'
    maxoutbuf: '0'
    minoutbuf: '0'
    samples_per_second: usrp_rate
    type: complex
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [792, 520.0]
    rotation: 0
    state: true
- name: digital_constellation_modulator_0_0
  id: digital_constellation_modulator
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    constellation: qpsk
    differential: 'True'
    excess_bw: excess_bw
    log: 'True'
    maxoutbuf: '0'
    minoutbuf: '0'
    samples_per_symbol: sps
    truncate: 'False'
    verbose: 'False'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [240, 512.0]
    rotation: 0
    state: enabled
- name: digital_crc32_bb_0
  id: digital_crc32_bb
  parameters:
    affinity: ''
    alias: ''
    check: 'False'
    comment: ''
    lengthtagname: '"packet_len"'
    maxoutbuf: '0'
    minoutbuf: '0'
    packed: 'True'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [448, 288.0]
    rotation: 0
    state: true
- name: digital_protocol_formatter_bb_0
  id: digital_protocol_formatter_bb
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    format: hdr_format
    len_tag_key: '"packet_len"'
    maxoutbuf: '0'
    minoutbuf: '0'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [672, 264.0]
    rotation: 0
    state: enabled
- name: epy_block_0_0
  id: epy_block
  parameters:
    FileName: '"message.txt"'
    Pkt_len: '60'
    _source_code: "import numpy as np\nfrom gnuradio import gr\nimport os\nimport\
      \ pmt\nimport base64\n\nclass blk(gr.sync_block):\n    def __init__(self, FileName='None',\
      \ Pkt_len=52):\n        gr.sync_block.__init__(\n            self,\n       \
      \     name='EPB: File Source to Tagged Stream',\n            in_sig=None,\n\
      \            out_sig=[np.uint8])\n\n        self.FileName = FileName\n     \
      \   self.Pkt_len = Pkt_len\n        self.state = 0  # Start in idle state\n\
      \        self.pre_count = 0\n        self.indx = 0\n        self._debug = 0\n\
      \        self._eof = True  # Start with no file loaded\n        self.char_list\
      \ = [37] + [85] * 46 + [93]  # Preamble\n        self.filler = [37, 85, 85,\
      \ 85, 35, 69, 79, 70] + [85] * 40 + [93]  # Post filler\n        self.c_len\
      \ = len(self.char_list)\n        self.f_len = len(self.filler)\n\n        #\
      \ Register message input port for receiving a new file name\n        self.message_port_register_in(pmt.intern(\"\
      file_cmd\"))\n        self.set_msg_handler(pmt.intern(\"file_cmd\"), self.handle_msg)\n\
      \n        if FileName != 'None':\n            self.load_file(FileName)\n\n \
      \   def handle_msg(self, msg):\n        \"\"\"Handles new file input via message\"\
      \"\"\n        if pmt.is_symbol(msg):\n            new_filename = pmt.symbol_to_string(msg)\n\
      \            self.load_file(new_filename)\n\n    def load_file(self, filename):\n\
      \        \"\"\"Loads a new file for transmission\"\"\"\n        if os.path.exists(filename):\n\
      \            self.FileName = filename\n            self.f_in = open(self.FileName,\
      \ 'rb')\n            self._eof = False\n            self.state = 1  # Start\
      \ transmission\n            print(f\"Loaded file: {self.FileName}\")\n     \
      \   else:\n            print(f\"File '{filename}' not found.\")\n          \
      \  self._eof = True\n            self.state = 0  # Stay idle if file is not\
      \ found\n\n    def work(self, input_items, output_items):\n        if self.state\
      \ == 0:\n            return 0  # Stay idle\n\n        elif self.state == 1:\n\
      \            key1 = pmt.intern(\"packet_len\")\n            val1 = pmt.from_long(self.c_len)\n\
      \            self.add_item_tag(0, self.indx, key1, val1)\n            self.indx\
      \ += self.c_len\n            output_items[0][:self.c_len] = self.char_list\n\
      \            self.pre_count += 1\n            if self.pre_count > 64:\n    \
      \            self.pre_count = 0\n                self.state = 2  # Move to sending\
      \ data\n            return self.c_len\n\n        elif self.state == 2:\n   \
      \         if not self._eof:\n                buff = self.f_in.read(self.Pkt_len)\n\
      \                if len(buff) == 0:\n                    print(\"End of file\"\
      )\n                    self._eof = True\n                    self.f_in.close()\n\
      \                    self.state = 3  # Send file name\n                    return\
      \ 0\n\n                encoded = base64.b64encode(buff)\n                key0\
      \ = pmt.intern(\"packet_len\")\n                val0 = pmt.from_long(len(encoded))\n\
      \                self.add_item_tag(0, self.indx, key0, val0)\n             \
      \   self.indx += len(encoded)\n                output_items[0][:len(encoded)]\
      \ = encoded\n                return len(encoded)\n\n        elif self.state\
      \ == 3:\n            fn_len = len(self.FileName)\n            key1 = pmt.intern(\"\
      packet_len\")\n            val1 = pmt.from_long(fn_len + 8)\n            self.add_item_tag(0,\
      \ self.indx, key1, val1)\n            self.indx += fn_len + 8\n            output_items[0][:8]\
      \ = self.filler[:8]\n            output_items[0][8:fn_len + 8] = [ord(c) for\
      \ c in self.FileName]\n            self.state = 4\n            return fn_len\
      \ + 8\n\n        elif self.state == 4:\n            key1 = pmt.intern(\"packet_len\"\
      )\n            val1 = pmt.from_long(self.f_len)\n            self.add_item_tag(0,\
      \ self.indx, key1, val1)\n            self.indx += self.f_len\n            output_items[0][:self.f_len]\
      \ = self.filler\n            self.pre_count += 1\n            if self.pre_count\
      \ > 16:\n                self.pre_count = 0\n                self.state = 0\
      \  # Return to idle, wait for new file\n            return self.f_len\n\n  \
      \      return 0\n"
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
  states:
    _io_cache: '(''EPB: File Source to Tagged Stream'', ''blk'', [(''FileName'', "''None''"),
      (''Pkt_len'', ''52'')], [(''file_cmd'', ''message'', 1)], [(''0'', ''byte'',
      1)], '''', [''FileName'', ''Pkt_len''])'
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [280, 384.0]
    rotation: 0
    state: disabled
- name: epy_block_0_1
  id: epy_block
  parameters:
    FileName: '"message.txt"'
    Pkt_len: '60'
    _source_code: "\"\"\"\nEmbedded Python Block: File Source to Tagged Stream\n\"\
      \"\"\n\nimport numpy as np\nfrom gnuradio import gr\nimport time\nimport pmt\n\
      import os.path\nimport sys\nimport base64\n\n\"\"\"\nState definitions\n   \
      \ 0   idle\n    1   send preamble\n    2   send file data\n    3   send file\
      \ name\n    4   send post filler\n\"\"\"\n\nclass blk(gr.sync_block):\n    def\
      \ __init__(self, FileName='None', Pkt_len=52):\n        gr.sync_block.__init__(\n\
      \            self,\n            name='EPB: File Source to Tagged Stream',\n\
      \            in_sig=None,\n            out_sig=[np.uint8])\n        self.FileName\
      \ = FileName\n        self.Pkt_len = Pkt_len\n        self.state = 0      #\
      \ idle state\n        self.pre_count = 0\n        self.indx = 0\n        self._debug\
      \ = 1     # debug\n        self.data = \"\"\n\n        if (os.path.exists(self.FileName)):\n\
      \            # open input file\n            self.f_in = open (self.FileName,\
      \ 'rb')\n            self._eof = False\n            if (self._debug):\n    \
      \            print (\"File name:\", self.FileName)\n            self.state =\
      \ 1\n        else:\n            print(self.FileName, 'does not exist')\n   \
      \         self._eof = True\n            self.state = 0\n\n        self.char_list\
      \ = [37,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85, 85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,\
      \ 85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85, 85,85,85,93]\n        self.c_len\
      \ = len (self.char_list)\n        # print (self.c_len)\n        self.filler\
      \ = [37,85,85,85, 35,69,79,70, 85,85,85,85,85,85,85,85, 85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,\
      \ 85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85, 85,85,85,93]\n        self.f_len\
      \ = len (self.filler)\n\n    def work(self, input_items, output_items):\n\n\
      \        if (self.state == 0):\n            # idle\n            return (0)\n\
      \n        elif (self.state == 1):\n            # send preamble\n           \
      \ if (self._debug):\n                print (\"state = 1\", self.pre_count)\n\
      \            key1 = pmt.intern(\"packet_len\")\n            val1 = pmt.from_long(self.c_len)\n\
      \            self.add_item_tag(0, # Write to output port 0\n               \
      \ self.indx,   # Index of the tag\n                key1,   # Key of the tag\n\
      \                val1    # Value of the tag\n                )\n           \
      \ self.indx += self.c_len\n            i = 0\n            while (i < self.c_len):\n\
      \                output_items[0][i] = self.char_list[i]\n                i +=\
      \ 1\n            self.pre_count += 1\n            if (self.pre_count > 64):\n\
      \                self.pre_count = 0\n                self.state = 2      # send\
      \ msg\n            return (self.c_len)\n\n        elif (self.state == 2):\n\
      \            while (not (self._eof)):\n                buff = self.f_in.read\
      \ (self.Pkt_len)\n                b_len = len(buff)\n                if b_len\
      \ == 0:\n                    print ('End of file')\n                    self._eof\
      \ = True\n                    self.f_in.close()\n                    self.state\
      \ = 3      # send file name\n                    self.pre_count = 0\n      \
      \              break\n                # convert to Base64\n                encoded\
      \ = base64.b64encode (buff)\n                e_len = len(encoded)\n        \
      \        if (self._debug):\n                    print ('b64 length =', e_len)\n\
      \                key0 = pmt.intern(\"packet_len\")\n                val0 = pmt.from_long(e_len)\n\
      \                self.add_item_tag(0, # Write to output port 0\n           \
      \         self.indx,   # Index of the tag\n                    key0,   # Key\
      \ of the tag\n                    val0    # Value of the tag\n             \
      \       )\n                self.indx += e_len\n                i = 0\n     \
      \           while (i < e_len):\n                    output_items[0][i] = encoded[i]\n\
      \                    i += 1\n                return (e_len)\n\n        elif\
      \ (self.state == 3):\n            # send file name\n            fn_len = len\
      \ (self.FileName)\n            key1 = pmt.intern(\"packet_len\")\n         \
      \   val1 = pmt.from_long(fn_len+8)\n            self.add_item_tag(0, # Write\
      \ to output port 0\n                self.indx,   # Index of the tag\n      \
      \          key1,   # Key of the tag\n                val1    # Value of the\
      \ tag\n                )\n            self.indx += (fn_len+8)\n            i\
      \ = 0\n            while (i < 8):\n                output_items[0][i] = self.filler[i]\n\
      \                i += 1\n            j = 0\n            while (i < (fn_len+8)):\n\
      \                output_items[0][i] = ord(self.FileName[j])\n              \
      \  i += 1\n                j += 1\n            self.state = 4\n            return\
      \ (fn_len+8)\n\n        elif (self.state == 4):\n            # send post filler\n\
      \            if (self._debug):\n                print (\"state = 4\", self.pre_count)\n\
      \            key1 = pmt.intern(\"packet_len\")\n            val1 = pmt.from_long(self.f_len)\n\
      \            self.add_item_tag(0, # Write to output port 0\n               \
      \ self.indx,   # Index of the tag\n                key1,   # Key of the tag\n\
      \                val1    # Value of the tag\n                )\n           \
      \ self.indx += self.f_len\n            i = 0\n            while (i < self.f_len):\n\
      \                output_items[0][i] = self.filler[i]\n                i += 1\n\
      \            self.pre_count += 1\n            if (self.pre_count > 16):\n  \
      \              self.pre_count = 0\n                self.state = 0      # idle\n\
      \            return (self.f_len)\n\n        return (0)\n\n"
    affinity: ''
    alias: ''
    comment: 'Filename is specified on the command line, e.g.:

      python3 pkt_xmt.py --InFile="../gr-logo.png"'
    maxoutbuf: '0'
    minoutbuf: '0'
  states:
    _io_cache: '(''EPB: File Source to Tagged Stream'', ''blk'', [(''FileName'', "''None''"),
      (''Pkt_len'', ''52'')], [], [(''0'', ''byte'', 1)], '''', [''FileName'', ''Pkt_len''])'
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [136, 264.0]
    rotation: 0
    state: true
- name: fft_filter_xxx_0_0_0_0
  id: fft_filter_xxx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    decim: '1'
    maxoutbuf: '0'
    minoutbuf: '0'
    nthreads: '1'
    samp_delay: '0'
    taps: low_pass_filter_taps
    type: ccc
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [456, 520.0]
    rotation: 0
    state: enabled
- name: iio_pluto_sink_0
  id: iio_pluto_sink
  parameters:
    affinity: ''
    alias: ''
    attenuation1: '10.0'
    bandwidth: '20000000'
    buffer_size: '32768'
    comment: ''
    cyclic: 'False'
    filter: ''
    filter_source: '''Auto'''
    fpass: '0'
    frequency: int(5e9)
    fstop: '0'
    len_tag_key: packet_len
    samplerate: usrp_rate
    type: fc32
    uri: 192.168.2.1
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1512, 572.0]
    rotation: 0
    state: enabled
- name: mmse_resampler_xx_0_0
  id: mmse_resampler_xx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    phase_shift: '0'
    resamp_ratio: 1.0/((usrp_rate/samp_rate)*rs_ratio)
    type: complex
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [672, 632.0]
    rotation: 0
    state: enabled
- name: qtgui_const_sink_x_0
  id: qtgui_const_sink_x
  parameters:
    affinity: ''
    alias: ''
    alpha1: '1.0'
    alpha10: '1.0'
    alpha2: '1.0'
    alpha3: '1.0'
    alpha4: '1.0'
    alpha5: '1.0'
    alpha6: '1.0'
    alpha7: '1.0'
    alpha8: '1.0'
    alpha9: '1.0'
    autoscale: 'False'
    axislabels: 'True'
    color1: '"blue"'
    color10: '"dark blue"'
    color2: '"red"'
    color3: '"green"'
    color4: '"black"'
    color5: '"cyan"'
    color6: '"magenta"'
    color7: '"yellow"'
    color8: '"dark red"'
    color9: '"dark green"'
    comment: ''
    grid: 'False'
    gui_hint: ''
    label1: ''
    label10: ''
    label2: ''
    label3: ''
    label4: ''
    label5: ''
    label6: ''
    label7: ''
    label8: ''
    label9: ''
    legend: 'True'
    marker1: '0'
    marker10: '0'
    marker2: '0'
    marker3: '0'
    marker4: '0'
    marker5: '0'
    marker6: '0'
    marker7: '0'
    marker8: '0'
    marker9: '0'
    name: '""'
    nconnections: '1'
    size: '1024'
    style1: '0'
    style10: '0'
    style2: '0'
    style3: '0'
    style4: '0'
    style5: '0'
    style6: '0'
    style7: '0'
    style8: '0'
    style9: '0'
    tr_chan: '0'
    tr_level: '0.0'
    tr_mode: qtgui.TRIG_MODE_FREE
    tr_slope: qtgui.TRIG_SLOPE_POS
    tr_tag: '""'
    type: complex
    update_time: '0.10'
    width1: '1'
    width10: '1'
    width2: '1'
    width3: '1'
    width4: '1'
    width5: '1'
    width6: '1'
    width7: '1'
    width8: '1'
    width9: '1'
    xmax: '2'
    xmin: '-2'
    ymax: '2'
    ymin: '-2'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1152, 592.0]
    rotation: 0
    state: enabled
- name: qtgui_edit_box_msg_0
  id: qtgui_edit_box_msg
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    gui_hint: ''
    is_pair: 'True'
    is_static: 'True'
    key: hi
    label: HI
    maxoutbuf: '0'
    minoutbuf: '0'
    type: string
    value: HI
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [32, 392.0]
    rotation: 0
    state: disabled
- name: qtgui_time_sink_x_1
  id: qtgui_time_sink_x
  parameters:
    affinity: ''
    alias: ''
    alpha1: '1.0'
    alpha10: '1.0'
    alpha2: '1.0'
    alpha3: '1.0'
    alpha4: '1.0'
    alpha5: '1.0'
    alpha6: '1.0'
    alpha7: '1.0'
    alpha8: '1.0'
    alpha9: '1.0'
    autoscale: 'False'
    axislabels: 'True'
    color1: blue
    color10: dark blue
    color2: red
    color3: green
    color4: black
    color5: cyan
    color6: magenta
    color7: yellow
    color8: dark red
    color9: dark green
    comment: ''
    ctrlpanel: 'False'
    entags: 'True'
    grid: 'False'
    gui_hint: ''
    label1: Signal 1
    label10: Signal 10
    label2: Signal 2
    label3: Signal 3
    label4: Signal 4
    label5: Signal 5
    label6: Signal 6
    label7: Signal 7
    label8: Signal 8
    label9: Signal 9
    legend: 'True'
    marker1: '-1'
    marker10: '-1'
    marker2: '-1'
    marker3: '-1'
    marker4: '-1'
    marker5: '-1'
    marker6: '-1'
    marker7: '-1'
    marker8: '-1'
    marker9: '-1'
    name: '""'
    nconnections: '1'
    size: '1024'
    srate: samp_rate
    stemplot: 'False'
    style1: '1'
    style10: '1'
    style2: '1'
    style3: '1'
    style4: '1'
    style5: '1'
    style6: '1'
    style7: '1'
    style8: '1'
    style9: '1'
    tr_chan: '0'
    tr_delay: '0'
    tr_level: '0.0'
    tr_mode: qtgui.TRIG_MODE_FREE
    tr_slope: qtgui.TRIG_SLOPE_POS
    tr_tag: '""'
    type: complex
    update_time: '0.10'
    width1: '1'
    width10: '1'
    width2: '1'
    width3: '1'
    width4: '1'
    width5: '1'
    width6: '1'
    width7: '1'
    width8: '1'
    width9: '1'
    ylabel: Amplitude
    ymax: '1'
    ymin: '-1'
    yunit: '""'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1080, 432.0]
    rotation: 0
    state: enabled
- name: virtual_sink_0
  id: virtual_sink
  parameters:
    alias: ''
    comment: ''
    stream_id: tx_wave
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1040, 712.0]
    rotation: 0
    state: enabled
- name: virtual_sink_0_0
  id: virtual_sink
  parameters:
    alias: ''
    comment: ''
    stream_id: t1
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1408, 320.0]
    rotation: 0
    state: true
- name: virtual_source_1
  id: virtual_source
  parameters:
    alias: ''
    comment: ''
    stream_id: t1
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [56, 536.0]
    rotation: 0
    state: enabled
- name: virtual_source_2
  id: virtual_source
  parameters:
    alias: ''
    comment: ''
    stream_id: tx_wave
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1288, 528.0]
    rotation: 0
    state: enabled
- name: zeromq_pub_sink_0_0
  id: zeromq_pub_sink
  parameters:
    address: tcp://127.0.0.1:49210
    affinity: ''
    alias: ''
    bind: 'True'
    comment: USRP sample rate = 768kHz
    drop_on_hwm: 'True'
    hwm: '-1'
    key: ''
    pass_tags: 'False'
    timeout: '100'
    type: complex
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1504, 432.0]
    rotation: 0
    state: disabled

connections:
- [blocks_pack_k_bits_bb_0, '0', virtual_sink_0_0, '0']
- [blocks_tagged_stream_mux_0, '0', blocks_pack_k_bits_bb_0, '0']
- [blocks_throttle2_0, '0', qtgui_const_sink_x_0, '0']
- [blocks_throttle2_0, '0', qtgui_time_sink_x_1, '0']
- [blocks_throttle2_0, '0', virtual_sink_0, '0']
- [digital_constellation_modulator_0_0, '0', fft_filter_xxx_0_0_0_0, '0']
- [digital_crc32_bb_0, '0', blocks_tagged_stream_mux_0, '1']
- [digital_crc32_bb_0, '0', digital_protocol_formatter_bb_0, '0']
- [digital_protocol_formatter_bb_0, '0', blocks_tagged_stream_mux_0, '0']
- [epy_block_0_0, '0', digital_crc32_bb_0, '0']
- [epy_block_0_1, '0', digital_crc32_bb_0, '0']
- [fft_filter_xxx_0_0_0_0, '0', mmse_resampler_xx_0_0, '0']
- [mmse_resampler_xx_0_0, '0', blocks_throttle2_0, '0']
- [qtgui_edit_box_msg_0, msg, epy_block_0_0, file_cmd]
- [virtual_source_1, '0', digital_constellation_modulator_0_0, '0']
- [virtual_source_2, '0', iio_pluto_sink_0, '0']
- [virtual_source_2, '0', zeromq_pub_sink_0_0, '0']

metadata:
  file_format: 1
  grc_version: 3.10.12.0
